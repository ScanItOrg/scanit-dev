generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("jdbc:postgresql://ep-billowing-field-a5r2ia9m-pooler.us-east-2.aws.neon.tech:5432/scanit")
}
  
model companies {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  website    String?    @db.VarChar(255)
  logo_url   String?
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @default(now()) @db.Timestamp(6)
  products   products[]
}

model manual_sections {
  id           Int           @id @default(autoincrement())
  manual_id    Int?
  title        String        @db.VarChar(255)
  content      String
  order_index  Int?          @default(0)
  created_at   DateTime?     @default(now()) @db.Timestamp(6)
  updated_at   DateTime?     @default(now()) @db.Timestamp(6)
  user_manuals user_manuals? @relation(fields: [manual_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  media        media[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model media {
  id              Int              @id @default(autoincrement())
  section_id      Int?
  type            String?          @db.VarChar(50)
  url             String
  caption         String?
  created_at      DateTime?        @default(now()) @db.Timestamp(6)
  manual_sections manual_sections? @relation(fields: [section_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model products {
  id           Int            @id @default(autoincrement())
  company_id   Int?
  name         String         @db.VarChar(255)
  model_number String?        @db.VarChar(100)
  image_url    String?
  release_date DateTime?      @db.Date
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  companies    companies?     @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_manuals user_manuals[]
}

model user_manuals {
  id              Int               @id @default(autoincrement())
  product_id      Int?
  language        String?           @default("en") @db.VarChar(50)
  version         String?           @default("1.0") @db.VarChar(50)
  published_at    DateTime?         @db.Date
  created_at      DateTime?         @default(now()) @db.Timestamp(6)
  updated_at      DateTime?         @default(now()) @db.Timestamp(6)
  manual_sections manual_sections[]
  products        products?         @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
